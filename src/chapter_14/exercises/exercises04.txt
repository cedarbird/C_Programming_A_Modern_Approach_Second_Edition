/*********************************************************
 * From C PROGRAMMING: A MODERN APPROACH, Second Edition *
 * By K. N. King                                         *
 * Copyright (c) 2008, 1996 W. W. Norton & Company, Inc. *
 * All rights reserved.                                  *
 * This program may be freely distributed for class use, *
 * provided that this copyright notice is retained.      *
 *********************************************************/

/* exercises04.txt (Chapter 14, page 345) */

(a) One problem stems from the lack of parentheses around the replacement
list. For example, the statement

a = 1/AVG(b, c);

will be replaced by

a = 1/(b+c)/2;

Even if we add the missing parentheses, though, the macro still has problems,
because it needs parentheses around x and y in the replacement list. The
preprocessor will turn the statement

a = AVG(b<c, c>d);

into

a = ((b<c+c>d)/2);

which is equivalent to

a = ((b<(c+c)>d)/2);

Here's the final (corrected) version of the macro:

#define AVG(x,y) (((x)+(y))/2)

(b) The problem is the lack of parentheses around the replacement list. For
example,

a = 1/AREA(b, c);

becomes

a = 1/(b)*(c);

Here's the corrected macro:

#define AREA(x,y) ((x)*(y))


